{{if eq .opts.App.Event "s3" -}}
data "aws_s3_bucket" "example" {
  bucket = "replace-me-with-existing-bucket"
}
{{end -}}

module "{{.opts.App.Name}}" {
  source  = "{{.opts.Terraform.Module.Source}}"
  version = "{{.opts.Terraform.Module.Version}}"

  filename      = "${path.module}/../bin/{{.opts.App.Name}}.zip"
  function_name = "tf-{{.opts.App.Name}}"
  handler       = "{{.opts.App.Name}}"
  runtime       = "go1.x"

  {{if eq .opts.App.Event "cloudwatch-event" -}}
  event = {
    type                = "cloudwatch-event"
    schedule_expression = "rate(1 minute)"
  }
  {{end -}}

  {{if eq .opts.App.Event "dynamodb" -}}
  event = {
    type             = "dynamodb"
    event_source_arn = "arn:aws:dynamodb:eu-west-1:647379381847:table/some-table/stream/some-identifier"
  }
  {{end -}}
  
  {{if eq .opts.App.Event "kinesis" -}}
  event = {
    type             = "kinesis"
    event_source_arn = "arn:aws:kinesis:eu-central-1:647379381847:stream/some-stream"
  }
  {{end -}}

  {{if eq .opts.App.Event "s3" -}}
  event = {
    type          = "s3"
    s3_bucket_arn = data.aws_s3_bucket.example.arn
    s3_bucket_id  = data.aws_s3_bucket.example.id
  }
  {{end -}}

  {{if eq .opts.App.Event "sns" -}}
  event = {
    type      = "sns"
    topic_arn = "arn:aws:sns:eu-west-1:123456789:test-topic"
  }
  {{end -}}

  {{if eq .opts.App.Event "sqs" -}}
  event = {
    type             = "sqs"
    event_source_arn = "arn:aws:sqs:eu-west-1:123456789:test-queue"
  }
  {{end -}}
}

{{if eq .opts.App.Event "s3" -}}
resource "aws_s3_bucket_notification" "bucket_notification" {
  bucket = data.aws_s3_bucket.example.id

  lambda_function {
    lambda_function_arn = module.{{.opts.App.Name}}.arn
    events              = ["s3:ObjectCreated:*"]
  }
}
{{end -}}
